---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pgadmin-pvc
  annotations:
    volume.beta.kubernetes.io/storage-class: "managed-nfs-storage"
spec:
  storageClassName: "managed-nfs-storage"
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Mi
---
kind: Service
apiVersion: v1
metadata:
  name: pgadmin-svc
  labels:
    name: postgres-operator
spec:
  ports:
    - protocol: TCP
      port: 80
      name: http
      targetPort: 80
      nodePort: 30861
  selector:
    app: pgadmin
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
  labels:
    app: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      initContainers:
      - name: busibox
        image: busybox:1.34.1
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 0     
        command:
          - 'sh'
          - '-c'
          - 'chown -R 5050:5050 /var/lib/pgadmin && chmod -R 755 /var/lib/pgadmin'
        volumeMounts:
          - mountPath: /var/lib/pgadmin
            name: state
      containers:
      - name: pgadmin
        image: dpage/pgadmin4:9.9.0
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 5050  
          runAsGroup: 5050  
        ports:
          - containerPort: 80
            name: http
            protocol: TCP
        env:
          - name: PGADMIN_DEFAULT_EMAIL
            value: "sanches@yandex.ru"
          - name: PGADMIN_DEFAULT_PASSWORD
            value: "password"
          - name: PGADMIN_CONFIG_SERVER_MODE
            value: "True"
          - name: PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION
            value: "False" 
        resources:
          requests:
            memory: "100Mi"
            cpu: "0.2"
          limits:
            memory: "800Mi"
            cpu: "0.8"
        volumeMounts:
          - mountPath: /var/lib/pgadmin
            name: state
      volumes:
        - name: state
          persistentVolumeClaim:
            claimName: pgadmin-pvc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pgadmin
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Script-Name /;
      proxy_set_header X-Scheme $scheme;
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-buffers: "4 256k"
    nginx.ingress.kubernetes.io/proxy-busy-buffers-size: "256k"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/proxy-set-headers: |
      X-Forwarded-Proto: https
      X-Forwarded-Host: $host
      X-Forwarded-Port: "443"  
spec:
  ingressClassName: nginx
  rules:
    - host: pg.ccsfarm.local
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: pgadmin-svc
                port:
                  name: http
